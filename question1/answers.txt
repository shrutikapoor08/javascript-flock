What’s your experience with Webpack, Gulp, and/or other JavaScript development environment tooling? What’s the value of using them in your workflow at all as you ship features on a daily and weekly basis?
I have used webpacks extensively in my development process. They make shipping products much faster. webpack such as url-loader or file-loader can help you load various types of files without having to worry about their parser once you have included them in your application. They require configuration once which may take a while to setup, but defntiely make development lot faster later on. If I was building a web app that has lots of static assets, I would definitely use webpack. 

What’s your experience with testing UI? If you were to outsource a web project to an offshore freelancing company, would you require them to implement testing?
I have over 1.5 years of experience developing automation test suites to test end to end flow of UI. If the offshore freelance company is developing services that send me data that I need to consume in my front end components, I would expect them to create their own unit tests to ensure functionality and business logic. I believe as a rule of thumb, developers should be writing their own unit tests. If they are developing a UI component, I would expect to see unit tests for that component. If I was to integrate this component in my web app, I would write end to end tests myself. 

What’s your experience with JavaScript frameworks? When and how are their valuable to you in shipping products?
I have worked extensively with AngularJS and ReactJS. I find them useful when creating larger and scalable web apps. They provide some useful libraries (such as validation of forms) that I wouldn't need to implement myself. They are also useful for structuring the web app and keeping code organized. The frameworks also help to make unit testing easier. 
